DROP SEQUENCE esg_sequence;
DROP SEQUENCE person_sequence;
DROP SEQUENCE problem_sequence;
DROP TRIGGER tr_insert_id_esg;
DROP TRIGGER tr_insert_id_person;
DROP TRIGGER tr_insert_id_problem;
DROP TABLE ESG CASCADE CONSTRAINTS;
DROP TABLE PERSONS CASCADE CONSTRAINTS;
DROP TABLE PROBLEMS CASCADE CONSTRAINTS;

CREATE TABLE ESG (
    ID_ESG integer NOT NULL CONSTRAINT esg_id_pk PRIMARY KEY,
    NAME_ESG varchar(20) NOT NULL,
    DESCRIPTION varchar(20) NOT NULL
);

CREATE SEQUENCE esg_sequence START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER tr_insert_id_esg
BEFORE INSERT ON ESG FOR EACH ROW
BEGIN

SELECT esg_sequence.NEXTVAL
INTO :NEW.ID_ESG
FROM DUAL;
END;
/

CREATE TABLE PERSONS (
    ID_PERSON INTEGER NOT NULL CONSTRAINT pessoa_id_pk PRIMARY KEY,
    EMAIL VARCHAR(50) NOT NULL,
    TELEPHONE VARCHAR(50),
    NAME_PERSON VARCHAR(50) NOT NULL
);

CREATE SEQUENCE person_sequence START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER tr_insert_id_person
BEFORE INSERT ON PERSONS FOR EACH ROW
BEGIN

SELECT person_sequence.NEXTVAL
INTO :NEW.ID_PERSON
FROM DUAL;
END;
/

CREATE TABLE PROBLEMS (
    ID_PROBLEM integer CONSTRAINT problema_id_pk PRIMARY KEY NOT NULL,
    DESCRIPTION varchar(200) NOT NULL,
    COMPLETED INTEGER NOT NULL,
    ID_ESG integer NOT NULL,
    ID_PERSON integer NOT NULL,
    CONSTRAINT FK_PROBLEM_ESG FOREIGN KEY(ID_ESG) REFERENCES ESG (ID_ESG),
    CONSTRAINT FK_PROBLEM_PERSON FOREIGN KEY(ID_PERSON) REFERENCES PERSONS (ID_PERSON)
);

CREATE SEQUENCE problem_sequence START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER tr_insert_id_problem
BEFORE INSERT ON PROBLEMS FOR EACH ROW
BEGIN

SELECT problem_sequence.NEXTVAL
INTO :NEW.ID_PROBLEM
FROM DUAL;
END;
/